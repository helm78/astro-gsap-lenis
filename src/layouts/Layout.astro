---
import { ClientRouter } from "astro:transitions";

export interface Props {
  title: string;
}

const { title } = Astro.props;

const anim = {
  old: {
    name: "bump-out",
    duration: "1s",
    easing: "ease-out",
    // direction: "reverse",
  },
  new: {
    name: "bump-in",
    duration: "1s",
    easing: "ease-out",
  },
};

const customTransition = {
  forwards: anim,
  backwards: anim,
};

const animOverlay = {
  old: {
    name: "overlay-out",
    duration: "1s",
    easing: "ease-out",
    // direction: "reverse",
  },
  new: {
    name: "overlay-in",
    duration: "1s",
    easing: "ease-out",
  },
};

const customOverlayTransition = {
  forwards: animOverlay,
  backwards: animOverlay,
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <ClientRouter />
    <title>{title}</title>
  </head>
  <body>
    <nav style="position: fixed; top: 0; padding: 1rem; z-index: 1000;">
      <a href="/">Home</a> | <a href="/work">Work</a>
    </nav>
    <main transition:animate={customTransition}>
      <slot />
    </main>
    <div class="overlay" transition:animate={customOverlayTransition}></div>
    <script>
      import Lenis from "@studio-freight/lenis";
      import { gsap } from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";

      // Register ScrollTrigger plugin
      gsap.registerPlugin(ScrollTrigger);
      window.gsap = gsap;
      window.ScrollTrigger = ScrollTrigger;

      // // Initialize Lenis
      // const lenis = new Lenis({
      //   duration: 1.2,
      //   easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
      //   smoothWheel: true,
      // });

      // function raf(time) {
      //   lenis.raf(time);
      //   requestAnimationFrame(raf);
      // }

      // requestAnimationFrame(raf);

      // Initialize Lenis with view transitions support
      function initLenis() {
        const lenis = new Lenis({
          duration: 1.2,
          easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
        });

        // Synchronize Lenis scrolling with GSAP's ScrollTrigger plugin
        lenis.on("scroll", ScrollTrigger.update);

        // Add Lenis's requestAnimationFrame (raf) method to GSAP's ticker
        gsap.ticker.add((time) => {
          lenis.raf(time * 1000);
        });

        // Disable lag smoothing in GSAP
        gsap.ticker.lagSmoothing(0);

        return lenis;
      }

      // Initialize on page load
      let lenis = initLenis();

      // Handle view transitions in Astro 5+
      document.addEventListener("astro:page-load", () => {
        // Reinitialize Lenis after navigation
        if (lenis) {
          lenis.destroy();
        }

        // Refresh ScrollTrigger
        ScrollTrigger.refresh();

        // Reinitialize Lenis
        lenis = initLenis();
      });

      // Clean up before navigation
      document.addEventListener("astro:before-preparation", () => {
        if (lenis) {
          lenis.destroy();
        }
      });

      // document.addEventListener("astro:before-preparation", () => {
      //   console.log("astro:before-preparation event triggered");
      // });
      // document.addEventListener("astro:after-preparation", () => {
      //   console.log("astro:after-preparation event triggered");
      // });
      // document.addEventListener("astro:before-swap", () => {
      //   console.log("astro:before-swap event triggered");
      // });
      // document.addEventListener("astro:after-swap", () => {
      //   console.log("astro:after-swap event triggered");
      // });
      // document.addEventListener("astro:page-load", () => {
      //   console.log("astro:page-load event triggered");
      // });

      // GSAP Animations
      // Hero animations
      // gsap.to(".title", {
      //   opacity: 1,
      //   y: 0,
      //   duration: 1,
      //   delay: 0.5,
      //   ease: "power2.out",
      // });

      // gsap.to(".subtitle", {
      //   opacity: 1,
      //   y: 0,
      //   duration: 1,
      //   delay: 0.8,
      //   ease: "power2.out",
      // });

      // // Box animations with ScrollTrigger
      // gsap.utils.toArray(".box").forEach((box, index) => {
      //   gsap.from(box as HTMLElement, {
      //     opacity: 0,
      //     x: -100,
      //     duration: 1,
      //     ease: "power2.out",
      //     scrollTrigger: {
      //       trigger: box as HTMLElement,
      //       start: "top 80%",
      //       end: "bottom 20%",
      //       toggleActions: "play none none reverse",
      //     },
      //   });
      // });

      // Update ScrollTrigger on Lenis scroll
      lenis.on("scroll", ScrollTrigger.update);
    </script>
  </body>
</html>

<style is:global>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
  }
  body {
    font-family: Arial, sans-serif;
    height: 100%;
  }

  main {
    position: relative;
    z-index: 1;
  }

  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100dvw;
    height: 100dvh;
    opacity: 0;
    background-color: rgba(0, 0, 0, 0.5);
    pointer-events: none;
    z-index: 2;
  }

  @keyframes bump-in {
    0% {
      transform: rotate(-5deg) translate(-100%, 100%);
    }
    100% {
      transform: rotate(0deg) translate(0, 0);
    }
  }

  @keyframes overlay-in {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes bump-out {
    0% {
      transform: rotate(0deg) translate(0, 0);
    }
    100% {
      transform: rotate(5deg) translate(100%, -100vh);
    }
  }

  @keyframes overlay-out {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>
